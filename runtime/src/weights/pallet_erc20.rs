
//! Autogenerated weights for `pallet_erc20`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-07-12, STEPS: `20`, REPEAT: 50, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/node
// benchmark
// pallet
// --chain=dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=pallet_erc20
// --extrinsic=*
// --steps=20
// --repeat=50
// --output=./runtime/src/weights/pallet_erc20.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_erc20`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_erc20::WeightInfo for WeightInfo<T> {
	// Storage: Erc20Token Balance (r:2 w:2)
	fn transfer() -> Weight {
		(14_985_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Erc20Token Allowance (r:0 w:1)
	fn approve() -> Weight {
		(10_274_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Erc20Token Allowance (r:1 w:1)
	fn increase_allowance() -> Weight {
		(11_649_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Erc20Token Allowance (r:1 w:1)
	fn decrease_allowance() -> Weight {
		(35_797_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Erc20Token Allowance (r:1 w:1)
	// Storage: Erc20Token Balance (r:2 w:2)
	fn transfer_from() -> Weight {
		(100_518_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Erc20Token TotalSupply (r:1 w:1)
	// Storage: Erc20Token Balance (r:1 w:1)
	fn mint() -> Weight {
		(37_384_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Erc20Token Balance (r:1 w:1)
	// Storage: Erc20Token TotalSupply (r:1 w:1)
	fn burn() -> Weight {
		(26_097_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
}
